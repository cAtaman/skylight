swagger: "2.0"
info:
  title: Student Management System Api
  description: A REST api that manages the student's database
  version: 1.0.0

basePath: /api

consumes:
  - application/json
produces:
  - application/json

paths:
  /login:
    post:
      tags: [Login]
      operationId: sms.src.users.login
      summary: User authentication
      description: Logs in a user using supplied token
      parameters:
        - in: body
          name: token
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
      responses:
        200:
          description: Returns the user specific token
          schema:
            type: object
            properties:
              token:
                type: string
              title:
                type: string
        401:
          description: Authentication failed

  /logout:
    post:
      tags: [Login]
      operationId: sms.src.users.logout
      summary: User authentication
      description: Logs out a user using supplied token
      parameters:
        - in: body
          name: token
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
      responses:
        200:
          description: User manually logged out
        401:
          description: Not previously signed in

  /session_key:
    get:
      tags: [Login]
      operationId: sms.src.users.session_key
      summary: Session key
      description: Get session key for use in generating token on client
      responses:
        200:
          description: Returns the current session key for use by client
          schema:
            type: string

  /current_session:
    get:
      tags: [Props]
      operationId: sms.config.get_current_session
      summary: Current Academic Session
      description: Get the current academic session
      responses:
        200:
          description: Returns the current academic session
          schema:
            type: integer

  /grading_rules:
    get:
      tags: [Props]
      operationId: sms.src.grading_rules.get
      parameters:
        - in: query
          name: acad_session
          type: integer
          required: true
      responses:
        200:
          description: Grading rules successfully retrieved
          schema:
            type: array
            items: {}

  /personal_info:
    get:
      tags: [Personal Information]
      operationId: sms.src.personal_info.get_exp
      summary: Get Personal Info
      description: Gets a student's bio data
      parameters:
        - name: mat_no
          in: query
          type: string
          required: true
      responses:
        200:
          description: Returns the bio data for the student or group of students
          schema:
            $ref: '#/definitions/PersonalInfo'
        404:
          description: Mat no does not exist
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

    post:
      tags: [Personal Information]
      summary: Initial Personal Info Entry
      description: Create student's personal information record
      operationId: sms.src.personal_info.post_exp
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonalInfo'
      responses:
        200:
          description: Record successfully added
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

    patch:
      tags: [Personal Information]
      summary: PersonalInfo Edit
      description: Edit student's personal information
      operationId: sms.src.personal_info.patch
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonalInfo'
        - in: query
          name: superuser
          type: boolean
          required: false
      responses:
        200:
          description: Record successfully added
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

    delete:
      tags: [Personal Information]
      operationId: sms.src.personal_info.delete
      summary: Delete Student
      description: Delete all student's record
      parameters:
        - name: mat_no
          in: query
          type: string
          required: true
      responses:
        200:
          description: Student successfully deleted
        404:
          description: Mat no does not exist
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_details:
    get:
      tags: [Course Details]
      summary: Course details query
      description: Gets the details a course by it's code or of all courses by their level
      operationId: sms.src.course_details.get_course_details
      parameters:
        - in: query
          name: course_code
          type: string
          required: false
        - in: query
          name: level
          type: integer
          required: false
        - in: query
          name: options
          type: boolean
          required: false
        - in: query
          name: inactive
          type: boolean
      responses:
        200:
          description: success
          schema:
            type: array
            items: {}
        404:
          description: Course not found
    post:
      tags: [Course Details]
      description: Adds a new course
      operationId: sms.src.course_details.post
      parameters:
        - in: body
          name: course
          required: true
          schema:
            $ref: '#/definitions/CourseDetails'
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    put:
      tags: [Course Details]
      summary: Course details update
      description: Modifies existing courses
      operationId: sms.src.course_details.patch
      parameters:
        - in: body
          name: data
          schema:
            type: array
            items: {}
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        401:
          description: Authentication failed
        404:
          description: Course not found
        440:
          description: Session expired, login again
    delete:
      tags: [Course Details]
      summary: Course details deletion
      description: Deletes a course
      operationId: sms.src.course_details.delete
      parameters:
        - in: query
          name: course_code
          type: string
          required: true
        - in: query
          name: course_level
          type: integer
          required: true
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_form:
    get:
      tags: [Sheets]
      operationId: sms.src.course_form.get
      summary: Course form generation
      description: Generates course form of a student as a png (for preview) or as a png (for printing)
                   or a blank sheet if mat_no not supplied
      produces:
        - image/png
        - application/pdf
      parameters:
        - in: query
          name: mat_no
          type: string
        - in: query
          name: session
          type: integer
        - in: query
          name: to_print
          type: boolean
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /result_update:
    get:
      tags: [Sheets]
      operationId: sms.src.result_update.get
      produces:
        - application/octet-stream
        - application/pdf
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: raw_score
          type: boolean
        - in: query
          name: to_print
          type: boolean
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again


  /level_gpa_cards:
    get:
      tags: [Sheets]
      operationId: sms.src.gpa_cards.get
      parameters:
        - in: query
          name: level
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Level_Gpa_Cards_get'

  /senate_version:
    get:
      tags: [Sheets]
      operationId: sms.src.senate_version.get
      produces:
        - application/pdf
      parameters:
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: level
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /broad_sheet:
    get:
      tags: [Sheets]
      operationId: sms.src.broad_sheet.get
      summary: Broad-Sheet generation
      description: Generates broad-sheets for the session as pdf documents
      produces:
        - application/octet-stream
      parameters:
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: level
          type: integer
          required: false
        - in: query
          name: first_sem_only
          type: boolean
          required: false
        - in: query
          name: raw_score
          type: boolean
          required: false
        - in: query
          name: to_print
          type: boolean
          required: false
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_reg_new:
    get:
      tags: [Course Registration]
      operationId: sms.src.course_reg.init_new
      summary: Get course registration
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CourseRegistration'
        400:
          description: Bad Request
        401:
          description: Authentication failed
        403:
          description: Forbidden
          schema:
            type: string
        440:
          description: Session expired, login again

  /course_reg:
    get:
      tags: [Course Registration]
      operationId: sms.src.course_reg.get
      summary: Get old course registration
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CourseRegistration'
        401:
          description: Authentication failed
        404:
          description: No course registration for entered session
        440:
          description: Session expired, login again

    post:
      tags: [Course Registration]
      operationId: sms.src.course_reg.post
      summary: Create/edit course registration
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/CourseRegistration'
        - in: query
          name: superuser
          type: boolean
          required: false
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        403:
          description: Forbidden
          schema:
            type: string
        440:
          description: Session expired, login again

    delete:
      tags: [Course Registration]
      operationId: sms.src.course_reg.delete
      summary: Delete course registration
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: superuser
          type: boolean
          required: false
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /results:
    get:
      tags: [Results]
      operationId: sms.src.results.get
      summary: Get results
      description: Gets the results of a particular student for the entered session
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Results_get'
        400:
          description: Bad request
        401:
          description: Unauthorised
        403:
          description: Forbidden
        404:
          description: No results found
        440:
          description: Session expired, login again
    post:
      tags: [Results]
      operationId: sms.src.results.post
      summary: Add result records
      description: Post results to the database
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/Results_post'
        - in: query
          name: superuser
          type: boolean
          required: false
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad request
        401:
          description: Unauthorised
        403:
          description: Forbidden
        404:
          description: Not found
        440:
          description: Session expired, login again

  /results_edit:
    get:
      tags: [Results]
      operationId: sms.src.results.get_resultedit
      summary: Get Result Edit Status
      description: Get the Result Edit Period Status
      responses:
        200:
          description: Operation Successful
          schema:
            type: integer
    post:
      tags: [Results]
      operationId: sms.src.results.set_resultedit
      summary: Set Result Edit Mode
      description: Set Result Edit Mode for Course Advisers
      parameters:
        - in: query
          name: state
          type: integer
          required: true
      responses:
        200:
          description: Operation Successful
          schema:
            type: integer

  /results_single:
    get:
      tags: [Results]
      operationId: sms.src.results.get_result_details
      description: Gets the result details of a particular student for the entered session
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Results_Single_get'
        400:
          description: Bad request
        401:
          description: Unauthorised
        403:
          description: Forbidden
        404:
          description: No results found
        440:
          description: Session expired, login again

  /results_stats_single:
    get:
      tags: [Results]
      operationId: sms.src.results.get_single_results_stats
      description: Gets the stats of the registered and entered credits for a single student
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: level
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items: {}
        400:
          description: Bad request
        401:
          description: Unauthorised
        403:
          description: Forbidden
        440:
          description: Session expired, login again

  /results_stats_multiple:
    get:
      tags: [Results]
      operationId: sms.src.results.get_multiple_results_stats
      description: Gets the stats of the registered and entered credits for all students in a level
      parameters:
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: level
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items: {}
        400:
          description: Bad request
        401:
          description: Unauthorised
        403:
          description: Forbidden
        440:
          description: Session expired, login again

  /accounts:
    get:
      tags: [Accounts]
      operationId: sms.src.accounts.get
      parameters:
        - in: query
          name: username
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items: {}
        401:
          description: Unauthorised
        404:
          description: Account not found
    post:
      tags: [Accounts]
      operationId: sms.src.accounts.post
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/Accounts_post'
      responses:
        200:
          description: Account successfully created
        400:
          description: Account creation failed. Invalid, missing, empty or duplicate field present
        401:
          description: Unauthorised
    patch:
      tags: [Accounts]
      operationId: sms.src.accounts.patch
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/Accounts_post'
        - in: query
          name: superuser
          type: boolean
          required: false
      responses:
        200:
          description: Account successfully updated
        400:
          description: Account modification failed. Empty, invalid or duplicate field supplied
        401:
          description: Unauthorised
        404:
          description: Account not found
    delete:
      tags: [Accounts]
      operationId: sms.src.accounts.delete
      parameters:
        - in: query
          name: username
          type: string
          required: true
      responses:
        200:
          description: Account successfully deleted
        401:
          description: Unauthorised
        404:
          description: Account not found

  /logs:
    get:
      tags: [Logs]
      operationId: sms.src.logs.get
      parameters:
        - in: query
          name: step
          type: integer
          required: false
        - in: query
          name: count
          type: integer
          required: false
        - in: query
          name: title
          type: string
          required: false
        - in: query
          name: time
          type: string
          required: false
      responses:
        200:
          description: Successfully retrieved logs
          schema:
            type: array
            items:
                type: array
                items: {}
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    delete:
      tags: [Logs]
      operationId: sms.src.logs.delete
      parameters:
        - in: query
          name: ids
          type: array
          items:
            type: integer
          required: false
      responses:
        200:
          description: Successfully deleted logs
        401:
          description: Authentication failed
        404:
          description: Some log entries not found
        440:
          description: Session expired, login again

  /backups:
    get:
      tags: [Backups]
      operationId: sms.src.backups.get
      summary: Get list of backups
      description: Get list of database backups
      responses:
        200:
          description: Backups retrieved successfully
          schema:
            type: array
            items:
              type: object
              properties:
                file_name:
                  type: string
                file_size:
                  type: number
                last_modified_time:
                  type: number
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    post:
      tags: [Backups]
      operationId: sms.src.backups.backup
      summary: Initiate backup
      description: Backup the current databases
      parameters:
        - in: query
          name: tag
          type: string
          required: false
      responses:
        200:
          description: Backup successful
          schema:
            type: string
        400:
          description: Something went wrong
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    patch:
      tags: [Backups]
      operationId: sms.src.backups.restore
      summary: Restore backup
      description: Restore specific backup
      parameters:
        - in: query
          name: backup_name
          type: string
          required: true
        - in: query
          name: include_accounts
          type: boolean
          required: false
      responses:
        200:
          description: Restore successful
        400:
          description: Something went wrong
        401:
          description: Authentication failed
        404:
          description: File not found
        440:
          description: Session expired, login again
    delete:
      tags: [Backups]
      operationId: sms.src.backups.delete
      summary: Delete a backup
      description: Delete a specific backup
      parameters:
        - in: query
          name: backup_name
          type: string
          required: true
      responses:
        200:
          description: Backup deleted successfully
          schema:
            type: string
        400:
          description: Something went wrong
        401:
          description: Authentication failed
        404:
          description: File not found
        440:
          description: Session expired, login again

  /backup_download:
    get:
      tags: [ Backups ]
      operationId: sms.src.backups.download
      summary: Download backups
      description: Download backups from a list of backup_names or get the "limit" most recent backups
      produces:
        - application/octet-stream
      parameters:
        - in: query
          name: backup_names
          type: array
          items:
            type: string
          required: false
        - in: query
          name: limit
          type: integer
          required: false
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again


definitions:
  PersonalInfo:
    type: object
    properties:
      mat_no:
        type: string
      surname:
        type: string
      othernames:
        type: string
      mode_of_entry:
        type: integer
      session_admitted:
        type: integer
      session_grad:
        type: integer
      level:
        type: integer
      sex:
        type: string
      date_of_birth:
        type: string
      state_of_origin:
        type: string
      phone_no:
        type: string
      email_address:
        type: string
      lga:
        type: string
      sponsor_phone_no:
        type: string
      sponsor_email_address:
        type: string
      grad_status:
        type: integer

  CourseDetails:
    type: object
    properties:
      course_code:
        type: string
      course_title:
        type: string
      course_credit:
        type: integer
      course_semester:
        type: integer
      course_level:
        type: integer
      teaching_dept:
        type: string
      start_date:
        type: integer
      end_date:
        type: integer
      options:
        type: integer

  CourseRegistration:
    type: object
    properties:
      mat_no:
        type: string
      personal_info:
        type: object
        properties:
          items: {}
      table_to_populate:
        type: string
      course_reg_session:
        type: integer
      course_reg_level:
        type: integer
      max_credits:
        type: integer
      courses:
        type: object
        properties:
          first_sem:
            type: array
            items:
              type: array
              items: {}
          second_sem:
            type: array
            items:
              type: array
              items: {}
      choices:
        type: object
        properties:
          first_sem:
            type: array
            items:
              type: array
              items: {}
          second_sem:
            type: array
            items:
              type: array
              items: {}
      probation_status:
        type: integer
      fees_status:
        type: integer
      others:
        type: string

  Results_get:
    type: object
    properties:
      mat_no:
        type: string
      table:
        type: string
      session_written:
        type: integer
      level_written:
        type: integer
      regular_courses:
        type: object
        properties:
          items: {}
      carryovers:
        type: object
        properties:
          items: {}
      unusual_results:
        type: object
        properties:
          items: {}
      tcp:
        type: integer
      category:
        type: string

  Results_post:
    type: object
    properties:
      level:
        type: integer
      list_of_results:
        type: array
        items:
          type: array
          items: {}
    example:
      level: 500
      list_of_results: [[course_code_1, session_1, mat_no_1, score_1], [course_code_2, session_2, mat_no_2, score_2]]

  Results_Single_get:
    type: object
    properties:
      mat_no:
        type: string
      name:
        type: string
      level:
        type: integer
      session:
        type: integer
      result:
        type: array
        items: {}
      carryovers:
        type: array
        items: {}
      unusual_results:
        type: string

  Accounts_post:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      permissions:
        type: string
      title:
        type: string
      fullname:
        type: string
      email:
        type: string

  Level_Gpa_Cards_get:
    type: array
    items:
      type: object
      properties:
        mat_no:
          type: string
        name:
          type: string
        gpas:
          type: array
          items: {}
        cgpa:
          type: number
