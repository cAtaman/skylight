swagger: "2.0"
info:
  title: Student Management System Api
  description: A REST api that manages the student's database
  version: 1.0.0

basePath: /api

consumes:
  - application/json
produces:
  - application/json

paths:
  /login:
    post:
      tags: [Login]
      operationId: sms.users.login
      summary: User authentication
      description: Logs in a user using supplied token
      parameters:
        - in: body
          name: token
          schema:
            type: object
            required:
              - token
            properties:
              token:
                type: string
      responses:
        200:
          description: Returns the user specific token
          schema:
            type: object
            properties:
              token:
                type: string
        401:
          description: Authentication failed

  /session_key:
    get:
      tags: [Login]
      operationId: sms.users.session_key
      summary: Session key
      description: Get session key for use in generating token on client
      responses:
        200:
          description: Returns the current session key for use by client
          schema:
            type: string

  /personal_info:
    get:
      tags: [Personal Information]
      operationId: sms.personal_dets.get
      summary: Personal_info query
      description: Gets a student or a group of students bio data
      parameters:
        - name: mat_no
          in: query
          type: string
          required: true
      responses:
        200:
          description: Returns the bio data for the student or group of students
          schema:
            $ref: '#/definitions/PersonalInfo'
        404:
          description: Mat no does not exist
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

    post:
      tags: [Personal Information]
      operationId: sms.personal_dets.post
      parameters:
        - name: student_data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PersonalInfo'
      responses:
        200:
          description: Record successfully added
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_details:
    get:
      tags: [Course Details]
      summary: Course details query
      description: Gets the details a course by it's code or of all courses by their level
      operationId: sms.course_details.get_course_details
      parameters:
        - in: query
          name: course_code
          type: string
          required: false
        - in: query
          name: level
          type: integer
          required: false
        - in: query
          name: use_curr_session
          type: boolean
          required: false
      responses:
        200:
          description: success
          schema:
            type: array
            items: {}
        404:
          description: Course not found
    post:
      tags: [Course Details]
      description: Adds a new course
      operationId: sms.course_details.post
      parameters:
        - in: body
          name: course
          required: true
          schema:
            $ref: '#/definitions/CourseDetails'
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    put:
      tags: [Course Details]
      summary: Course details update
      description: Modifies existing courses
      operationId: sms.course_details.put
      parameters:
        - in: body
          name: data
          schema:
            type: array
            items: {}
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        401:
          description: Authentication failed
        440:
          description: Session expired, login again
    delete:
      tags: [Course Details]
      summary: Course details deletion
      description: Deletes a course
      operationId: sms.course_details.delete
      parameters:
        - in: query
          name: course_code
          type: string
          required: true
        - in: query
          name: course_level
          type: integer
          required: true
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_form:
    get:
      tags: [Sheets]
      operationId: sms.course_form.get
      summary: Course form generation
      description: Generates course form of a student as a png (for preview) or as a png (for printing)
      produces:
        - image/png
        - application/pdf
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: session
          type: integer
        - in: query
          name: to_print
          type: boolean
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /result_update:
    get:
      tags: [Sheets]
      operationId: sms.result_update.get
      produces:
        - application/octet-stream
        - application/pdf
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: raw_score
          type: boolean
        - in: query
          name: to_print
          type: boolean
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /senate_version:
    get:
      tags: [Sheets]
      operationId: sms.senate_version.get
      produces:
        - application/pdf
      parameters:
        - in: query
          name: acad_session
          type: integer
          required: true
        - in: query
          name: level
          type: integer
          required: false
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /course_reg:
    get:
      tags: [Course Registration]
      operationId: sms.course_reg.get
      summary: Get course registration
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/CourseRegistration_get'
        401:
          description: Authentication failed
        403:
          description: Forbidden - Course reg not available
          schema:
            type: string
        440:
          description: Session expired, login again
    post:
      tags: [Course Registration]
      operationId: sms.course_reg.post
      summary: Create/edit course registration
      parameters:
        - in: body
          name: course_reg
          schema:
            $ref: '#/definitions/CourseRegistration_post'
      responses:
        200:
          description: Success
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /results:
    get:
      tags: [Results]
      operationId: sms.results.get
      summary: Get results
      description: Gets the results of a particular student for the entered session
      parameters:
        - in: query
          name: mat_no
          type: string
          required: true
        - in: query
          name: acad_session
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Results_get'
        401:
          description: Authentication failed
        403:
          description: Forbidden - No result available
          schema:
            type: string
        440:
          description: Session expired, login again
    post:
      tags: [Results]
      operationId: sms.results.post
      summary: Add result records
      description: Post results to the database as a list of list ==> [ [course_code, session, mat_no, score], [next record], ... ]
      parameters:
        - in: body
          name: list_of_results
          schema:
            $ref: '#/definitions/Results_post'
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              type: string
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

  /accounts:
    get:
      tags: [Accounts]
      operationId: sms.accounts.get
      parameters:
        - in: query
          name: username
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items: {}
        401:
          description: Unauthorised
        404:
          description: Account not found
    post:
      tags: [Accounts]
      operationId: sms.accounts.post
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/Accounts_post'
      responses:
        200:
          description: Account successfully created
        400:
          description: Account creation failed, duplicate username or title
        401:
          description: Unauthorised
    patch:
      tags: [Accounts]
      operationId: sms.accounts.manage
      parameters:
        - in: body
          name: data
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              title:
                type: string
              fullname:
                type: string
              email:
                type: string
      responses:
        200:
          description: Account successfully updated
        401:
          description: Unauthorised
    put:
      tags: [Accounts]
      operationId: sms.accounts.put
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/Accounts_post'
      responses:
        200:
          description: Account successfully updated
        401:
          description: Unauthorised
        404:
          description: Account not found
    delete:
      tags: [Accounts]
      operationId: sms.accounts.delete
      parameters:
        - in: query
          name: username
          type: string
          required: true
      responses:
        200:
          description: Account successfully deleted
        401:
          description: Unauthorised
        404:
          description: Account not found

  /logs:
    get:
      tags: [Logs]
      operationId: sms.logs.get
      parameters:
        - in: query
          name: limit
          type: integer
          required: false
        - in: query
          name: offset
          type: integer
          required: false
      responses:
        200:
          description: Successfully retrieved logs
          schema:
            type: array
            items:
                type: array
                items: {}
        401:
          description: Authentication failed
        440:
          description: Session expired, login again

definitions:
  PersonalInfo:
    type: object
    properties:
      mat_no:
        type: string
      surname:
        type: string
      othernames:
        type: string
      mode_of_entry:
        type: integer
      session_admitted:
        type: integer
      current_level:
        type: integer
      sex:
        type: string
      date_of_birth:
        type: string
      state_of_origin:
        type: string
      phone_no:
        type: string
      email_address:
        type: string
      sponsor_phone_no:
        type: string
      sponsor_email_address:
        type: string
      grad_stats:
        type: integer

  CourseDetails:
    type: object
    properties:
      course_code:
        type: string
      course_title:
        type: string
      course_credit:
        type: integer
      course_semester:
        type: integer
      course_level:
        type: integer
      teaching_dept:
        type: string
      start_date:
        type: integer
      end_date:
        type: integer
      options:
        type: integer

  CourseRegistration_get:
    type: object
    properties:
      personal_info:
        type: object
        properties:
          surname:
            type: string
          othernames:
            type: string
          depat:
            type: string
          mode_of_entry:
            type: string
          current_level:
            type: string
          phone_no:
            type: string
          sex:
            type: string
          email:
            type: string
          state_of_origin:
            type: string
          lga_of_origin:
            type: string
      table_to_populate:
        type: string
      course_reg_session:
        type: integer
      course_reg_level:
        type: integer
      max_credits:
        type: integer
      courses:
        type: object
        properties:
          first_sem:
            type: array
            items:
              type: array
              items: {}
          second_sem:
            type: array
            items:
              type: array
              items: {}
      choices:
        type: object
        properties:
          first_sem:
            type: array
            items:
              type: array
              items: {}
          second_sem:
            type: array
            items:
              type: array
              items: {}
      probation_status:
        type: integer
      fees_status:
        type: integer
      others:
        type: string
      error:
        type: string

  CourseRegistration_post:
    type: object
    properties:
      mat_no:
        type: string
      table_to_populate:
        type: string
      course_reg_session:
        type: integer
      course_reg_level:
        type: integer
      max_credits:
        type: integer
      courses:
        type: object
        properties:
          first_sem:
            type: array
            items:
              type: string
          second_sem:
            type: array
            items:
              type: string
      probation_status:
        type: integer
      fees_status:
        type: integer
      others:
        type: string

  Results_get:
    type: object
    properties:
      mat_no:
        type: string
      courses:
        type: array
        items:
          type: array
          items: {}
      table_to_populate:
        type: string
      session_written:
        type: integer
      level_written:
        type: integer

  Results_post:
    type: array
    items:
      type: array
      items: {}

  Accounts_post:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      permissions:
        type: string
      title:
        type: string
      fullname:
        type: string
      email:
        type: string
